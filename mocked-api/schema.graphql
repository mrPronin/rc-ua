type Address {
  id: ID!
  country: String!
  region: String
  city: String!
  postalCode: String!
  street: String!
  latitude: Float
  longitude: Float
}

type BloodDonationCenter implements Node {
  """The Globally Unique ID of this object"""
  id: GlobalID!
  name: String!
  category: ENUM_BLOODDONATIONCENTER_CATEGORY!
  notes: String
  tags: [Tag!]!
  address: Address
  contacts: Contacts
  workSchedule: [WorkScheduleItem!]
  createdAt: DateTime
  updatedAt: DateTime
  publishedAt: DateTime
}

"""A connection to a list of items."""
type BloodDonationCenterConnection {
  """Pagination data for this connection"""
  pageInfo: PageInfo!

  """Contains the nodes in this connection"""
  edges: [BloodDonationCenterEdge!]!
}

"""An edge in a connection."""
type BloodDonationCenterEdge {
  """A cursor for use in pagination"""
  cursor: String!

  """The item at the end of the edge"""
  node: BloodDonationCenter!
}

type Contacts {
  id: ID!
  cellPhone: String
  landlinePhone: String
  email: String
  website: String
}

"""Date with time (isoformat)"""
scalar DateTime

enum ENUM_BLOODDONATIONCENTER_CATEGORY {
  STATIONARY
  MOBILE
}

enum ENUM_WEEKDAY {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}

"""
The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID.
"""
scalar GlobalID @specifiedBy(url: "https://relay.dev/graphql/objectidentification.htm")

"""An object with a Globally Unique ID"""
interface Node {
  """The Globally Unique ID of this object"""
  id: GlobalID!
}

"""Information to aid in pagination."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

type Query {
  node(
    """The ID of the object."""
    id: GlobalID!
  ): Node!
  bloodDonationCenters(
    """Returns the items in the list that come before the specified cursor."""
    before: String = null

    """Returns the items in the list that come after the specified cursor."""
    after: String = null

    """Returns the first n items from the list."""
    first: Int = null

    """Returns the items in the list that come after the specified cursor."""
    last: Int = null
  ): BloodDonationCenterConnection!
}

type Tag {
  name: String!
}

"""Time (isoformat)"""
scalar Time

type WorkScheduleItem {
  id: ID!
  weekDay: ENUM_WEEKDAY!
  startTimeBeforeLunchBreak: Time
  endTimeBeforeLunchBreak: Time
  startTimeAfterLunchBreak: Time
  endTimeAfterLunchBreak: Time
}
